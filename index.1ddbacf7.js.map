{"mappings":"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","sources":["src/js/button__more.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_inherits.js","node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/@swc/helpers/lib/_create_super.js","node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/@parcel/runtime-js/lib/runtime-5b7ec351225bae43.js","node_modules/@parcel/runtime-js/lib/helpers/browser/js-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@parcel/runtime-js/lib/runtime-b69246192c1de86b.js","src/js/button_wave.js","src/js/util/util.js","src/js/core/eventable.js","src/js/slide/content.js","src/js/util/viewport-size.js","src/js/slide/zoom-level.js","src/js/slide/loader.js","src/js/core/base.js","src/js/lightbox/lightbox.js","src/js/popap.js","src/js/modal.js","src/js/slick.js","src/js/burger-menu.js"],"sourcesContent":["(() => {\n  const container = document.querySelector('.whats__item__img--leptop');\n  const textSpan = document.querySelector('#span-more');\n\n  container.addEventListener('click', e => {\n    const targetValue = textSpan.classList.toggle('display-nan');\n    if (e.currentTarget.nodeName === 'BUTTON') {\n      console.log(e.currentTarget.nodeName);\n      return targetValue;\n    }\n    return;\n  });\n})();\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","module.exports = (require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"awb4N\"))).then(() => parcelRequire('jt1Qn'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\n\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same script twice (e.g. if it was already in the HTML)\n    var existingScripts = document.getElementsByTagName('script');\n\n    if ([].concat(existingScripts).some(function isCurrentBundle(script) {\n      return script.src === bundle;\n    })) {\n      resolve();\n      return;\n    }\n\n    var preloadLink = document.createElement('link');\n    preloadLink.href = bundle;\n    preloadLink.rel = 'preload';\n    preloadLink.as = 'script';\n    document.head.appendChild(preloadLink);\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n\n    script.onerror = function (e) {\n      var error = new TypeError(\"Failed to fetch dynamically imported module: \".concat(bundle, \". Error: \").concat(e.message));\n      script.onerror = script.onload = null;\n      script.remove();\n      reject(error);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\n\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n\n    case 'prefetch':\n      return cachedPrefetches;\n\n    default:\n      return cachedBundles;\n  }\n}\n\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.1ddbacf7.js\\\",\\\"awb4N\\\":\\\"photoswipe.esm.97d6e9f9.js\\\"}\"));","// !  подія по кліку\ndocument.addEventListener('click', function (e) {\n  const targetElement = e.target;\n  if (targetElement.closest('[data-ripple')) {\n    // !  Константи\n    const button = targetElement.closest('[data-ripple');\n    const ripple = document.createElement('span');\n    const diameter = Math.max(button.clientWidth, button.clientHeight);\n    const radius = diameter / 2;\n\n    // !  Формування елементу\n    ripple.style.width = ripple.style.height = `${diameter}px`;\n    ripple.style.left = `${\n      e.pageX - (button.getBoundingClientRect().left + scrollX) - radius\n    }px`;\n    ripple.style.top = `${\n      e.pageY - (button.getBoundingClientRect().top + scrollY) - radius\n    }px`;\n    ripple.classList.add('ripple');\n\n    // !  Добавлення елементу\n    button.appendChild(ripple);\n\n    // !  Отримання часу дії анімації\n\n    const timeOut = getAnimationDuration(ripple);\n\n    // !  Видалення елементу\n\n    setTimeout(() => {\n      ripple ? ripple.remove() : null;\n    }, timeOut);\n\n    // ! Функція часу дії\n    function getAnimationDuration() {\n      const aDuration = window.getComputedStyle(ripple).animationDuration;\n      return aDuration.includes('ms')\n        ? aDuration.replace('ms', '')\n        : aDuration.replace('s', '') * 1000;\n    }\n  }\n});\n// !  подія по кліку\ndocument.addEventListener('click', function (e) {\n  const targetElement = e.target;\n  if (targetElement.closest('[data-ripple')) {\n    // !  Константи\n    const button = targetElement.closest('[data-ripple');\n    const ripple = document.createElement('span');\n    const diameter = Math.max(button.clientWidth, button.clientHeight);\n    const radius = diameter / 2;\n\n    // !  Формування елементу\n    ripple.style.width = ripple.style.height = `${diameter}px`;\n    ripple.style.left = `${\n      e.pageX - (button.getBoundingClientRect().left + scrollX) - radius\n    }px`;\n    ripple.style.top = `${\n      e.pageY - (button.getBoundingClientRect().top + scrollY) - radius\n    }px`;\n    ripple.classList.add('ripple');\n\n    // !  Добавлення елементу\n    button.appendChild(ripple);\n\n    // !  Отримання часу дії анімації\n\n    const timeOut = getAnimationDuration(ripple);\n\n    // !  Видалення елементу\n\n    setTimeout(() => {\n      ripple ? ripple.remove() : null;\n    }, timeOut);\n\n    // ! Функція часу дії\n    function getAnimationDuration() {\n      const aDuration = window.getComputedStyle(ripple).animationDuration;\n      return aDuration.includes('ms')\n        ? aDuration.replace('ms', '')\n        : aDuration.replace('s', '') * 1000;\n    }\n  }\n});\n","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} T\r\n * @param {string} className\r\n * @param {T} tagName\r\n * @param {Node} [appendToEl]\r\n * @returns {HTMLElementTagNameMap[T]}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName);\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {Point}\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {number}\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are equal\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n * @returns {boolean}\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n * @returns {number}\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n * @returns {string}\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = `translate3d(${x}px,${y || 0}px,0)`;\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ` scale3d(${scale},${scale},1)`;\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number} [y]\r\n * @param {number} [scale]\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string} [prop] CSS property to animate\r\n * @param {number} [duration] in ms\r\n * @param {string} [ease] CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? `${prop} ${duration}ms ${ease || defaultCSSEasing}`\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? `${w}px` : w;\r\n  el.style.height = (typeof h === 'number') ? `${h}px` : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode().catch(() => {});\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n * @returns {boolean}\r\n */\r\nexport function specialKeyUsed(e) {\r\n  return ('button' in e && e.button === 1) || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey;\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} [option]\r\n * @param {string} [legacySelector]\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n * @returns {boolean}\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide | undefined, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point | undefined, transitionDuration: number | false | undefined }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource | undefined, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource | undefined) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement | null | undefined, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thumbnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds | undefined, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thumbnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n * @prop {(preventPointerEvent: boolean, event: PointerEvent, pointerType: string) => boolean} preventPointerEvent\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    this.defaultPrevented = false;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe | undefined} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions | undefined} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name]?.push({ fn, priority });\r\n    this._filters[name]?.sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    this.pswp?.addFilter(name, fn, priority);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    this._filters[name]?.forEach((filter) => {\r\n      // @ts-expect-error\r\n      args[0] = filter.fn.apply(this, args);\r\n    });\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name]?.push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    this.pswp?.on(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    this.pswp?.off(name, fn);\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    this._listeners[name]?.forEach((listener) => {\r\n      listener.call(this, event);\r\n    });\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement | undefined} */\r\n    this.element = undefined;\r\n    /** @type {Placeholder | undefined} */\r\n    this.placeholder = undefined;\r\n    /** @type {Slide | undefined} */\r\n    this.slide = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    this.isDecoding = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = undefined;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean} isLazy\r\n   * @param {boolean} [reload]\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content', 'div');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    if (!this.isImageContent()\r\n      || !this.element\r\n      || this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src ?? '';\r\n    imageElement.alt = this.data.alt ?? '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide && this.element) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is in error state\r\n   */\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    if (this.instance.dispatch(\r\n      'contentResize',\r\n      { content: this, width, height }).defaultPrevented\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        this.instance.dispatch(\r\n          'imageSizeChange',\r\n          { slide: this.slide, width, height, content: this }\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (!this.isImageContent() || !this.element || !this.data.srcset) {\r\n      return;\r\n    }\r\n\r\n    const image = /** @type HTMLImageElement */ (this.element);\r\n    const sizesWidth = this.instance.applyFilters(\r\n      'srcsetSizesWidth',\r\n      this.displayedImageWidth,\r\n      this\r\n    );\r\n\r\n    if (\r\n      !image.dataset.largestUsedSize\r\n      || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)\r\n    ) {\r\n      image.sizes = sizesWidth + 'px';\r\n      image.dataset.largestUsedSize = String(sizesWidth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = undefined;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = undefined;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      let errorMsgEl = createElement('pswp__error-msg', 'div');\r\n      errorMsgEl.innerText = this.instance.options?.errorMsg ?? '';\r\n      errorMsgEl = /** @type {HTMLDivElement} */ (this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      ));\r\n      this.element = createElement('pswp__content pswp__error-msg-container', 'div');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached || !this.element) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().catch(() => {}).finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.slide && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented\r\n      || !this.slide) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n      // add image to slide when it becomes active,\r\n      // even if it's not finished decoding\r\n      this.appendImage();\r\n    } else if (this.isError()) {\r\n      this.load(false, true); // try to reload\r\n    }\r\n\r\n    if (this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'false');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n    if (this.slide && this.slide.holderElement) {\r\n      this.slide.holderElement.setAttribute('aria-hidden', 'true');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipeBase} pswp\r\n * @returns {Point}\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {Point} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  let paddingValue = 0;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return Number(paddingValue) || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {Point} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n * @returns {Point}\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe} [pswp] PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n    /** @type { Point | null } */\r\n    this.panAreaSize = null;\r\n    /** @type { Point | null } */\r\n    this.elementSize = null;\r\n    this.fit = 1;\r\n    this.fill = 1;\r\n    this.vFill = 1;\r\n    this.initial = 1;\r\n    this.secondary = 1;\r\n    this.max = 1;\r\n    this.min = 1;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {Point} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    /** @type {Point} */\r\n    const elementSize = { x: maxWidth, y: maxHeight };\r\n    this.elementSize = elementSize;\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = panAreaSize.x / elementSize.x;\r\n    const vRatio = panAreaSize.y / elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   * @returns { number | undefined }\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (\r\n      optionPrefix + 'ZoomLevel'\r\n    );\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (this.elementSize && currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return this._parseZoomLevelOption('max') || Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n * @param {number} index\r\n * @returns {Content} Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  const content = instance.createContentFromData(itemData, index);\r\n  /** @type {ZoomLevel | undefined} */\r\n  let zoomLevel;\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset, and we need to define sizes\r\n  if (options) {\r\n    zoomLevel = new ZoomLevel(options, itemData, -1);\r\n\r\n    let viewportSize;\r\n    if (instance.pswp) {\r\n      viewportSize = instance.pswp.viewportSize;\r\n    } else {\r\n      viewportSize = getViewportSize(options, instance);\r\n    }\r\n\r\n    const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n    zoomLevel.update(content.width, content.height, panAreaSize);\r\n  }\r\n\r\n  content.lazyLoad();\r\n\r\n  if (zoomLevel) {\r\n    content.setDisplayedSize(\r\n      Math.ceil(content.width * zoomLevel.initial),\r\n      Math.ceil(content.height * zoomLevel.initial)\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default, it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipeBase} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n * @returns {Content | undefined}\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number} [diff] Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} initialIndex\r\n   */\r\n  loadSlideByIndex(initialIndex) {\r\n    const index = this.pswp.getLoopedIndex(initialIndex);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   * @returns {Content}\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      this.addToCache(content);\r\n    }\r\n\r\n    // assign slide to content\r\n    content.setSlide(slide);\r\n\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   * @returns {Content | undefined}\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = [];\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport { getElementsFromOption } from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems = 0;\r\n    const dataSource = this.options?.dataSource;\r\n\r\n    if (dataSource && 'length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   * @returns {Content}\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   * @returns {SlideData}\r\n   */\r\n  getItemData(index) {\r\n    const dataSource = this.options?.dataSource;\r\n    /** @type {SlideData | HTMLElement} */\r\n    let dataSourceItem = {};\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && 'gallery' in dataSource) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   * @returns {HTMLElement[]}\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options?.children || this.options?.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   * @returns {SlideData}\r\n   */\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (\r\n      element.tagName === 'A'\r\n        ? element\r\n        : element.querySelector('a')\r\n    );\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = linkEl.dataset.pswpWidth ? parseInt(linkEl.dataset.pswpWidth, 10) : 0;\r\n      itemData.height = linkEl.dataset.pswpHeight ? parseInt(linkEl.dataset.pswpHeight, 10) : 0;\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt') ?? '';\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns {Content} Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} [options]\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n    this.shouldOpen = false;\r\n    /**\r\n     * @private\r\n     * @type {Content | undefined}\r\n     */\r\n    this._preloadedContent = undefined;\r\n\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp) { // ... if PhotoSwipe is already open\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not the ideal way to detect them.\r\n    //\r\n    /** @type {Point | null} */\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    /** @type {DataSource} */\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   * @returns {number}\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   * @param {Point | null} [initialPoint]\r\n   * @returns {boolean}\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp || !this.options) {\r\n      return false;\r\n    }\r\n\r\n    // Use the first gallery element if dataSource is not provided\r\n    if (!dataSource && this.options.gallery && this.options.children) {\r\n      const galleryElements = getElementsFromOption(this.options.gallery);\r\n      if (galleryElements[0]) {\r\n        dataSource = {\r\n          gallery: galleryElements[0]\r\n        };\r\n      }\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource} [dataSource]\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name]?.forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name]?.forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = undefined;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = undefined;\r\n      delete window.pswp;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    this.pswp?.destroy();\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = {};\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n","import PhotoSwipeLightbox from '../../node_modules/photoswipe/dist/photoswipe-lightbox.esm';\n\nconst lightbox = new PhotoSwipeLightbox({\n  gallery: '#my-gallery',\n  children: 'a',\n  pswpModule: () => import('photoswipe'),\n});\n\nlightbox.init();\n","const menuBtnRef = document.querySelector('.wraper');\nconst mobileMenuRef = document.querySelector('#modal');\nconst btnClose = document.querySelector('#close');\nconst bodyHtml = document.querySelector('[data-modaL=\"true\"');\nconst body = document.querySelector('body');\n\nbodyHtml.addEventListener('click', e => {\n  e.preventDefault();\n  if (e.target.id !== \"modal\") {\n    return;\n  }\n  menuBtnRef.classList.toggle('display-nan');\n  body.classList.add('scroll');\n});\n\nmenuBtnRef.addEventListener('click', e => {\n  if (e.target.id !== 'close') {\n    return;\n  }\n  if (e.key === 'ESCAPE') {\n    menuBtnRef.classList.toggle('display-nan');\n    body.classList.remove('scroll');\n  }\n\n  menuBtnRef.classList.toggle('display-nan');\n  body.classList.remove('scroll');\n});\n\nbodyHtml.addEventListener('keydown', e => {\n  e.preventDefault();\n  if (e.key !== 'Escape') {\n    return;\n  }\n  menuBtnRef.classList.add('display-nan');\n  body.classList.remove('scroll');\n});\n","$('.carousel').slick({\n  dots: false,\n  infinite: true,\n  speed: 500,\n  fade: true,\n  cssEase: 'linear',\n  autoplay: true,\n  autoplaySpeed: 2000,\n  infinite: true,\n});\n","const btnBurger = document.querySelector('[data-menu-button]');\nconst modal = document.querySelector('[data-menu]');\n\nbtnBurger.addEventListener('click', () => {\n  modal.classList.toggle('is-open');\n\n});\n"],"names":["container","textSpan","$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","defineProperty","module","exports","value","default","self","ReferenceError","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","subClass","superClass","create","constructor","$ae7f60fd48750bb9$var$_setPrototypeOf","obj","parcelRequire","__esModule","$c1b1a34fae3d3c27$var$setPrototypeOf","o1","p1","setPrototypeOf","o","p","__proto__","Symbol","Derived","hasNativeReflectConstruct","$2059300b4b5a348b$var$_isNativeReflectConstruct","result","Super","$2059300b4b5a348b$var$_getPrototypeOf","NewTarget","this","Reflect","construct","arguments","apply","$2059300b4b5a348b$var$_possibleConstructorReturn","$2059300b4b5a348b$var$_interopRequireDefault","sham","Proxy","Boolean","valueOf","call","e","$b9926a5835d271e3$var$getPrototypeOf","getPrototypeOf","$e17dad4ea3dafe1a$var$_typeOf","$e17dad4ea3dafe1a$var$_assertThisInitialized","$e17dad4ea3dafe1a$var$_interopRequireDefault","getBundleURL","resolve","then","$2prpb","bundle","Promise","reject","existingScripts","document","getElementsByTagName","concat","some","script","src","preloadLink","createElement","href","rel","as","head","appendChild","script1","async","type","charset","onerror","error","message","onload","remove","$1c132cac09cd18d9$var$cachedBundles","$1c132cac09cd18d9$var$cachedPreloads","$1c132cac09cd18d9$var$cachedPrefetches","$1c132cac09cd18d9$var$getCache","loader","cache","catch","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","register","JSON","parse","addEventListener","aDuration","targetElement","closest","button","ripple","diameter","Math","max","clientWidth","clientHeight","radius","style","width","height","left","pageX","getBoundingClientRect","scrollX","top","pageY","scrollY","classList","add","timeOut","window","getComputedStyle","animationDuration","includes","setTimeout","querySelector","targetValue","toggle","currentTarget","nodeName","console","log","$ds8z5","$598475d3e7bafd5f$var$createElement","className","tagName","appendToEl","propValue","x","y","scale","undefined","el","option","isArray","w","selector","h","legacySelector","$598475d3e7bafd5f$var$LOAD_STATE","$598475d3e7bafd5f$var$getElementsFromOption","elements","Array","from","parent","querySelectorAll","priority","updateSrcsetSizes","data","imageElement","srcset","PhotoSwipeEvent","state","assign","LOAD_STATE","$parcel$interopDefault","$a2hTj","defaultPrevented","$8MBJY","Eventable","pswp","options","name","fn","_filters","onError","_this$_filters$name","push","dispatch","_this$_filters$name2","sort","f1","f2","slide","content","_this$pswp","addFilter","isLoading","filter","applyFilters","_len","args","_key","setDisplayedSize","_this","_this$_filters$name3","forEach","_this$_listeners$name","_listeners","_this$pswp2","on","listener","_this$pswp3","off","details","usePlaceholder","$598475d3e7bafd5f$var$PhotoSwipeEvent","_this$_listeners$name2","event","element","imageSrc","imgEl","alt","destroy","setAttribute","Placeholder","ERROR","transform","displayError","_this$element","parentNode","Content","itemData","index","append","isAttached","placeholder","Number","supportsDecode","isImageContent","keepPlaceholder","appendImage","isLazy","reload","isError","placeholderEl","deactivate","parentElement","prepend","holderElement","msrc","isFirstSlide","loadImage","innerHTML","updateContentSize","_this$data$src","_this$data$alt","LOADED","getViewportSizeFn","newViewportSize","complete","onLoaded","documentElement","innerHeight","paddingValue","hasSlide","MAX_IMAGE_WIDTH","ZoomLevel","isActive","heavyAppended","elementSize","removePlaceholder","initial","update","maxWidth","maxHeight","hRatio","panAreaSize","vRatio","min","slideData","optionValue","_getInitial","_parseZoomLevelOption","$598475d3e7bafd5f$var$setWidthHeight","_getMax","isInitialSizeUpdate","displayedImageWidth","displayedImageHeight","createContentFromData","zoomLevel","image","PhotoSwipeBase","largestUsedSize","String","sizesWidth","numItems","dataSourceItem","dataSource","items","Element","_this$instance$option","_this$instance$option2","_getGalleryDOMElements","errorMsgEl","innerText","errorMsg","children","galleryElement","linkEl","dataset","lazyLoadData","$598475d3e7bafd5f$var$isSafari","isDecoding","onThumbnailsClick","init","load","specialKeyUsed","clientY","preventDefault","loadAndOpen","clickedIndex","initialPoint","prop","viewportSize","paddingFn","legacyPropName","toUpperCase","slice","_openPhotoswipe","$598475d3e7bafd5f$var$parsePaddingOption","ctrlKey","metaKey","altKey","shiftKey","goTo","gallery","pswpModule","$40873ecf3c18e122$var$menuBtnRef","$40873ecf3c18e122$var$bodyHtml","$40873ecf3c18e122$var$body","$hKHmD","$","slick","dots","infinite","speed","fade","cssEase","autoplay","autoplaySpeed","$a6f082bb96fcbb30$var$btnBurger","$a6f082bb96fcbb30$var$modal"],"version":3,"file":"index.1ddbacf7.js.map"}